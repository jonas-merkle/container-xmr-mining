name: Docker Build, Publish, and Sign

on:
  push:
    branches:
      - main
      - develop
    tags:
      - version-*
  schedule:
    # Runs every day at midnight UTC
    - cron: '0 0 * * *'

jobs:
  build:
    # Job that builds the Docker image on pushes to main and develop
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the code from the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Log in to GitHub Container Registry
      # Uses GitHubâ€™s GITHUB_TOKEN for authentication
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Build and push multi-architecture Docker image (amd64 and arm64)
      # Using Docker's build-push-action to get the digest as output
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: ./src
          file: ./src/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/${{ github.repository }}:test

      # Step 4: Install Cosign tool for signing the Docker image
      - name: Install Cosign
        run: |
          curl -LO https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64
          chmod +x cosign-linux-amd64
          sudo mv cosign-linux-amd64 /usr/local/bin/cosign

      # Step 5: Sign the published Docker image (skip on pull requests)
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAG: ghcr.io/${{ github.repository }}:test
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: |
          cosign sign --yes $TAG@$DIGEST

  publish:
    # Job that publishes versioned Docker images based on tags (e.g., version-1.0.0)
    # Runs only on pushes that create tags starting with "version-"
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/version-')
    steps:
      # Step 1: Check out the code from the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Extract version number from the tag (e.g., version-1.0.0 -> 1.0.0)
      # and set it as an environment variable
      - name: Extract version from tag
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/version-}" >> $GITHUB_ENV

      # Step 4: Build and push multi-architecture Docker image with version and latest tags
      - name: Build and push Docker image with version and latest tags
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: ./src
          file: ./src/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository }}:${{ env.version }}
            ghcr.io/${{ github.repository }}:latest

      # Step 5: Install Cosign tool for signing
      - name: Install Cosign
        run: |
          curl -LO https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64
          chmod +x cosign-linux-amd64
          sudo mv cosign-linux-amd64 /usr/local/bin/cosign

      # Step 6: Sign both the version-specific and latest Docker images
      - name: Sign the published Docker images
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: |
            ghcr.io/${{ github.repository }}:${{ env.version }}
            ghcr.io/${{ github.repository }}:latest
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: |
          echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

  periodic:
    # Job that runs on a schedule or on pushes to the main branch
    # Builds and pushes the Docker image with the "latest" tag
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.ref == 'refs/heads/main'
    steps:
      # Step 1: Check out the code from the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Build and push the Docker image with the "latest" tag for amd64 and arm64 platforms
      - name: Build and push Docker image with latest tag
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: ./src
          file: ./src/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/${{ github.repository }}:latest

      # Step 4: Install Cosign tool for signing
      - name: Install Cosign
        run: |
          curl -LO https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64
          chmod +x cosign-linux-amd64
          sudo mv cosign-linux-amd64 /usr/local/bin/cosign

      # Step 5: Sign the "latest" Docker image
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAG: ghcr.io/${{ github.repository }}:latest
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: |
          cosign sign --yes $TAG@$DIGEST
