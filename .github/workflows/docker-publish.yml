name: Docker Build and Publish

on:
  push:
    branches:
      - main
    tags:
      - version-*  # Trigger publish workflow on new version tags
  schedule:
    - cron: '0 0 1 * *'  # Run once a month on the main branch
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run the workflow on'
        required: false
        default: 'main'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Install Cosign
        run: |
          curl -LO https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64
          chmod +x cosign-linux-amd64
          sudo mv cosign-linux-amd64 /usr/local/bin/cosign

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host

      - name: Extract version tag or branch name
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == refs/heads/main ]]; then
            echo "tag=latest" >> $GITHUB_ENV
            echo "tag_latest=true" >> $GITHUB_ENV
          elif [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" =~ ^refs/tags/version- ]]; then
            version="${GITHUB_REF#refs/tags/version-}"
            echo "tag=${version}" >> $GITHUB_ENV
            echo "tag_latest=true" >> $GITHUB_ENV
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "tag=${{ github.event.inputs.branch }}" >> $GITHUB_ENV
            echo "tag_latest=false" >> $GITHUB_ENV
          else
            echo "tag=latest" >> $GITHUB_ENV
            echo "tag_latest=true" >> $GITHUB_ENV
          fi

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image with "latest" tag
        uses: docker/build-push-action@v4
        if: ${{ env.tag_latest == 'true' }}
        with:
          context: ./src
          file: ./src/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository }}:${{ env.tag }}
            ghcr.io/${{ github.repository }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Docker image without "latest" tag
        uses: docker/build-push-action@v4
        if: ${{ env.tag_latest == 'false' }}
        with:
          context: ./src
          file: ./src/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository }}:${{ env.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker images with "latest" tag
        if: ${{ env.tag_latest == 'true' }}
        env:
          TAGS: |
            ghcr.io/${{ github.repository }}:${{ env.tag }}
            ghcr.io/${{ github.repository }}:latest
        run: |
          echo "${TAGS}" | xargs -I {} cosign sign --yes --identity-token ${{ secrets.GITHUB_TOKEN }} {}
        
      - name: Sign the published Docker images without "latest" tag
        if: ${{ env.tag_latest == 'false' }}
        env:
          TAGS: |
            ghcr.io/${{ github.repository }}:${{ env.tag }}
        run: |
          echo "${TAGS}" | xargs -I {} cosign sign --yes --identity-token ${{ secrets.GITHUB_TOKEN }} {}
