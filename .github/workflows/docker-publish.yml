name: Docker Build, Publish, and Sign

on:
  push:
    branches:
      - main  # Automatically build on all commits to main
    tags:
      - version-*  # Trigger publish workflow on new version tags
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run the workflow on (develop only)'
        required: false
        default: 'develop'
  schedule:
    - cron: '0 0 1 * *'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        id: build-and-cache
        uses: docker/build-push-action@v4
        with:
          context: ./src
          file: ./src/Dockerfile
          push: false
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/${{ github.repository }}:temp
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Export Docker image as artifact
        run: docker save ghcr.io/${{ github.repository }}:temp | gzip > image.tar.gz
      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: image.tar.gz

  publish:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Install Cosign
        run: |
          curl -LO https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64
          chmod +x cosign-linux-amd64
          sudo mv cosign-linux-amd64 /usr/local/bin/cosign

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image
      - name: Load Docker image
        run: docker load -i image.tar.gz

      - name: Extract version from tag
        if: startsWith(github.ref, 'refs/tags/version-')
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/version-}" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag and push Docker image
        run: |
          docker tag ghcr.io/${{ github.repository }}:temp ghcr.io/${{ github.repository }}:${{ env.version || 'latest' }}
          docker tag ghcr.io/${{ github.repository }}:temp ghcr.io/${{ github.repository }}:latest
          docker push ghcr.io/${{ github.repository }}:${{ env.version || 'latest' }}
          docker push ghcr.io/${{ github.repository }}:latest

      - name: Sign the published Docker images
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: |
            ghcr.io/${{ github.repository }}:${{ env.version || 'latest' }}
            ghcr.io/${{ github.repository }}:latest
          DIGEST: ${{ steps.build-and-cache.outputs.digest }}
        run: |
          echo "${TAGS}" | xargs -I {} cosign sign --yes --identity-token ${{ secrets.GITHUB_TOKEN }} {}@${DIGEST}
